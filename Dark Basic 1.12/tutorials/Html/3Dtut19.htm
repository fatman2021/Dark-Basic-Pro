<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Generator" content="Microsoft Word 97">
   <meta name="GENERATOR" content="Microsoft FrontPage 4.0">
   <title>3Dtut1</title>
</head>
<body text="#FFFFFF" link="#FFFF00" vlink="#00FF00" background="dbback.gif" BGPROPERTIES="FIXED">
<font face="Arial,Helvetica"><font color="#FFFF00"><font size=+3>3D
Tutorials: 3. The Game</font></font></font>
<br><font face="Arial,Helvetica"><font color="#FFFF00"><font size=+2>1.
Gosub</font></font></font>
<br><font face="Arial,Helvetica"><font color="#FFFF00"><font size=+1>Purpose:
To show the use of the Gosub statement.</font></font></font>
<p><font face="Arial,Helvetica"><font size=+1>In this tutorial we will
show you one use of the "Gosub" command. We will use a &quot;Gosub&quot; in this example
to help organize the game program, to make it easier to understand what
is happening in the main loop and make it easier when we begin to add more
features to the game.</font></font>
<br>&nbsp;
<p><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
If BulletLife > 0 then Gosub ShootBullet</font></font></font>
<br>&nbsp;
<p><font face="Arial,Helvetica"><font size=+1>We have replaced the whole
bullet life test section of code with one line. The "Gosub" command is
used to run a set of code that is located elsewhere in the program and
then return to the same place where the "Gosub" command was called. Here
we are calling the "ShootBullet" subroutine.</font></font>
<p><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
ShootBullet:</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
Dec BulletLife</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
Move object 2,10</font></font></font>
<p><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
bX#=Object position X(2)</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
bY#=Object position Y(2)</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
bZ#=Object position Z(2)</font></font></font>
<p><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
inc Pn</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
if Pn=21 then Pn=10</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
Scale object Pn,100,100,100</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
Position object Pn,bX#,bY#,bZ#</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
point object Pn,X#,Y#,Z#</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
Zrotate object Pn,rnd(180)</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
for x = 1 to 10</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
scale object int((Wrapvalue((Pn-9+x)*36))/36)+10,100+x*25,100+x*25,100+x*25</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
set cursor 10,10</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
next x</font></font></font>
<p><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
if bY# &lt; Get Ground height(1,bX#,bZ#) then BulletLife=0</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
Position sound 2,bX#,bY#,bZ#</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
set cursor 10,10</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
if Sqrt((mX# - bX#)^2 + (mY#+25 - bY#)^2 + (mZ# - bZ#)^2) &lt;20</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
print "hit hit hit hit hit hit hit hit"</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
BulletLife = 0</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
endif</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
if BulletLife = 0</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
Hide object 2</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
stop sound 2</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
for x=10 to 20</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;&nbsp;
hide object x</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
next x</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;&nbsp;
Explode = 20</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>&nbsp;
endif</font></font></font>
<br><font face="Courier New,Courier"><font color="#FFFF00"><font size=+1>Return</font></font></font>
<br>&nbsp;
<p><font face="Arial,Helvetica"><font size=+1>You define a subroutine by
giving the subroutine a unique label or name and you place this label where
the subroutine begins. You must place a colon after the subroutine label or it will not be recognized and may cause an error. Where the code in
your subroutine ends you must place the "Return" statement so the code
will continue to be executed where the Gosub was called. This technique
greatly reduces the clutter in the main loop making it easier to understand
what is happening in the main loop. By properly planning your subroutines
you can save yourself from hours of frustration by organizing the structure
of your code.</font></font>
</body>
</html>
